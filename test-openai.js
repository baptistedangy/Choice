// Test script pour v√©rifier les fonctions OpenAI
import { getTopRecommendations } from './openai.js';
import { analyzeDish } from './src/dishAnalysis.js';

// Test de getTopRecommendations
async function testGetTopRecommendations() {
  console.log('üß™ Testing getTopRecommendations...');
  
  const testMenuText = `
  MENU DU JOUR
  
  Entr√©es:
  - Salade C√©sar: Laitue, parmesan, cro√ªtons, vinaigrette - 8‚Ç¨
  - Soupe √† l'oignon: Oignons caram√©lis√©s, fromage gratin√© - 6‚Ç¨
  
  Plats:
  - Steak Frites: B≈ìuf grill√©, frites maison, sauce au poivre - 18‚Ç¨
  - Poisson du jour: Filet de bar, l√©gumes de saison - 16‚Ç¨
  - Pasta Carbonara: P√¢tes, ≈ìufs, lardons, parmesan - 14‚Ç¨
  
  Desserts:
  - Cr√®me br√ªl√©e: Vanille de Madagascar - 7‚Ç¨
  - Tarte Tatin: Pommes caram√©lis√©es - 6‚Ç¨
  `;
  
  const testUserProfile = {
    dietaryRestrictions: [],
    budget: "medium",
    cuisinePreferences: ["French", "Italian"],
    allergies: [],
    spiceTolerance: "medium"
  };
  
  try {
    const recommendations = await getTopRecommendations(testMenuText, testUserProfile);
    console.log('‚úÖ getTopRecommendations result:', recommendations);
    return recommendations;
  } catch (error) {
    console.error('‚ùå getTopRecommendations error:', error);
    return null;
  }
}

// Test de analyzeDish
async function testAnalyzeDish() {
  console.log('üß™ Testing analyzeDish...');
  
  const testDishText = "Salade C√©sar: Laitue fra√Æche, parmesan, cro√ªtons, vinaigrette maison";
  const testUserProfile = {
    dietaryRestrictions: [],
    budget: "medium",
    cuisinePreferences: ["French", "Italian"],
    allergies: [],
    spiceTolerance: "medium"
  };
  
  try {
    const analysis = await analyzeDish(testDishText, testUserProfile);
    console.log('‚úÖ analyzeDish result:', analysis);
    return analysis;
  } catch (error) {
    console.error('‚ùå analyzeDish error:', error);
    return null;
  }
}

// Ex√©cuter les tests
async function runTests() {
  console.log('üöÄ Starting OpenAI API tests...');
  
  // Test 1: getTopRecommendations
  const recommendations = await testGetTopRecommendations();
  
  // Test 2: analyzeDish
  const analysis = await testAnalyzeDish();
  
  console.log('üìä Test Results:');
  console.log('- getTopRecommendations:', recommendations ? '‚úÖ PASS' : '‚ùå FAIL');
  console.log('- analyzeDish:', analysis ? '‚úÖ PASS' : '‚ùå FAIL');
  
  if (recommendations && analysis) {
    console.log('üéâ All tests passed!');
  } else {
    console.log('‚ö†Ô∏è Some tests failed. Check the logs above.');
  }
}

// Ex√©cuter si le script est appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  runTests();
}

export { testGetTopRecommendations, testAnalyzeDish, runTests }; 